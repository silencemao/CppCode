//
// Created by greg on 19-5-2.
//

#include <iostream>
using namespace std;

/**
 * 最长回文子串
 * */
string findPalindrome(string s, int left, int right){
    while (left>=0 && right<=s.size()-1 && s[left]==s[right]){
        left--;
        right++;
    }
    return s.substr(left+1, right-left-1);
}

string longestPalindrome(string &s) {
    // write your code here
    if (s.size() == 1)
        return s;
    string longestStr;
    string tmp;
    for (int i=0; i<s.size(); i++){
        tmp = findPalindrome(s, i, i);      // 针对aba类型的
        if (tmp.size() > longestStr.size())
            longestStr = tmp;

        tmp = findPalindrome(s, i, i+1);    // 针对abba类型的
        if (tmp.size() > longestStr.size())
            longestStr = tmp;
    }
    return longestStr;
}

int main(){
    string s = "abacdfgdcaba";
    cout <<  s << " : " << longestPalindrome(s) << endl;

    s = "321012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210012321001232100123210123210012321001232100123210123";
    cout <<  s << " : " << longestPalindrome(s) << endl;

    //"illi"
    s = "iptmykvjanwiihepqhzupneckpzomgvzmyoybzfynybpfybngttozprjbupciuinpzryritfmyxyppxigitnemanreexcpwscvcwddnfjswgprabdggbgcillisyoskdodzlpbltefiz";
    cout <<  s << " : " << longestPalindrome(s) << endl;

    return 0;
}